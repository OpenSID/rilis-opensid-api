# GithHub Actions Workflow generated with Ghygen
# Original configuration: https://ghygen.hi-folks.dev?code=0f60e7e08ce0e2091d7422820f9f87a0
name: Test
on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    # Check if contains [ci skip] will be skip github action
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    # Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE:  opensid-test
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.0','7.4','7.3' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v2
    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run Migrations
    # Set environment
      env:
        DB_CONNECTION: tests
        DB_DATABASE: opensid-test
        DB_PORT: 33306
        DB_USER: root

      run: php artisan migrate --database=tests

    - name: Show dir
      run: pwd
    - name: PHP Version
      run: php --version

    # Code quality
    - name: Execute tests (Unit and Feature tests) via PHPUnit
    # Set environment
      env:
        DB_CONNECTION: tests
        DB_DATABASE: opensid-test
        DB_PORT: 33306
        DB_USER: root

      run: composer test